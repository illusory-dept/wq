(1) fn
    to call functions that accept 0 args, do:
        fn[;]
    to call functions that accept 1 arg, do one of the following:
        fn 1        // recommended
        fn[1;]      // the trailing ; is required
    the following is invalid:
        fn -1       // this is currently parsed as (- fn 1)
                    // to pass -1 to fn, do: fn(-1) or fn[-1;]
    to call functions that accept >=2 args:
        fn[1;2;]
    functions defined without a param list can be called with 0, 1 or 2 args,
    which are implicitly bound to x and y.
    to explicitly define a function that accepts 0 args, do one of th following:
        fn:{[]...}
        fn:{[;]...}

(2) body
    currently, "blocks" are not present in wq,
    therefore the following is invalid:
        $[cond;{do1;do2};do3]   // INVALID
    instead, use:
        c: cond
        $.[c;do1;do2;...]
        $.[not c;do3;do4;...]

    loops accept an arbitrary number of bodies:
        N[3;echo n;a:n+1;echo a;]

    if you really need "blocks" for some reason, do one of following:
        {do1;do2;do3}()         // invokes an
        {do1;do2;do3}[;]        // anonymous function.

(3) scoping
    currently, assignments inside function bodies create new bindings,
    overshadowing any bindings with the same name in the outer scope.

    as a result, you cannot modify a variable from the outer scope within a function body.

(4) semicolons
    function calls require a semicolon at the end of the arg list,
    whereas indexing requires that there is no trailing semicolon. e.g.,
        fn[1;2;]
        lst[1;2]
        dic[`a;`b]
    in function parameter lists, a trailing semicolon is optional.
    both of the following are valid:
        fn:{[m;n]...}
        fn:{[m;n;]...}

(5) newlines
    newlines are generally accepted and can act as semicolons in most contexts.

    valid examples:
        lst: (1
              2
              3)
        f: {[a;b;c;d;e;f
             g;h;i;j;]
            echo x
            echo y}

    "important positions":
        some positions are considered "important", and a semicolon is explicitly required.
            $[true;      // important
                1;         // important
                2]
            N[3;         // important
                echo n]
